services:
  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:latest
    restart: always
    network_mode: host
    env_file:
      - .env
    depends_on:
      - influxdb
      - mosquitto
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - ./home-assistant/config:/config
      - ./certificate:/config/ssl
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TIME_ZONE}

  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    restart: always
    command: tunnel run
    network_mode: host
    depends_on:
      - homeassistant
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
      - TZ=${TIME_ZONE}
    volumes:
      - ./cloudflared/config:/config
      - /etc/localtime:/etc/localtime:ro      
      
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - "9000:9000"
      - "9443:9443"
    environment:
      - TZ=${TIME_ZONE}
    volumes:
      - ./portainer/data:/data
      - ./certificate:/certs
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    restart: always
    ports:
      - "8086:8086/tcp"
    environment:
      - TZ=${TIME_ZONE}
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config/:/etc/influxdb2
      - /etc/localtime:/etc/localtime:ro
    ulimits:
      nofile:
        soft: 32768
        hard: 32768

  grafana:
    depends_on:
      - influxdb
    image: grafana/grafana:latest
    container_name: grafana
    user: "0:0"
    ports:
      - "3000:3000"
      - "3444:3444"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - ./grafana/data:/var/lib/grafana

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883/tcp"
    environment:
      - TZ=${TIME_ZONE}
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    stdin_open: true
    tty: true

  duplicati:
    container_name: duplicati
    image: duplicati/duplicati
    restart: unless-stopped
    ports:
      - "8200:8200/tcp"
    environment:
      - TZ=Europe/Brussels
    volumes:
      - /opt/duplicati/data:/data
      - /mnt/backup/duplicati:/backups
      - /opt:/source

  # postgres:
  #   container_name: postgres
  #   image: postgres:latest
  #   restart: always
  #   ports:
  #     - "5234:5234"
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - ./postgres/data:/var/lib/postgresql/data
  #     - /etc/localtime:/etc/localtime:ro      